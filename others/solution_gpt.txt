Идея решения (TL;DR)

Цель: автоматический подсчет и сверка 11 позиций набора, с порогом совпадения и сигналом на ручной пересчёт, плюс полный аудит для QA.
Подход: детекция/сегментация инструментов на столе, устойчивый счет с трекингом и верификацией, вычисление процентов совпадений по каждому классу, формирование JSON и запись в ТОиР.
Стек: полностью open‑source (Apache/MIT), контейнеризация (Docker), API (FastAPI + Swagger), UI (веб).


Архитектура решения

Камера и свет:
1 PoE‑камера 2–4K, фиксированная сверху, RTSP поток, фокус на стол.
Равномерный LED‑свет, по возможности поляризационные фильтры (снижают блики от металла).
На стол — тонкий технологический «коврик» контрастного цвета и 4 метки ArUco по углам (для авто‑калибровки масштаба и геометрии).


Вычисления:
Мини‑ПК (x86, Linux) рядом со столом, CPU+iGPU достаточно; ускорение через OpenVINO/ONNX Runtime.

Сервисы:
Inference Service: детекция/сегментация + постобработка + расчёт метрик совпадения.
API Gateway (FastAPI): Swagger UI, интеграция с ТОиР.
UI: веб‑клиент (React/Vue) — превью камеры, боксы, список и проценты.
БД: PostgreSQL (сессии, результаты, параметры), объектное хранилище для кадров/видео (Ceph RGW или MinIO).
Логи/метрики: Prometheus + Grafana; централизованный логинг (Loki/ELK).

Пример блок‑схемы
Camera → RTSP → GStreamer/OpenCV → Inference → Верификация (классификатор) → Подсчет/сверка → JSON/БД → UI и ТОиР


